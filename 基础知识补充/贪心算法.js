// 题外话
//   2022年9月15日学习贪心算法，记录一点小情绪吧！
//   他强任他强，清风拂山岗！加油！
// 贪心算法
//   贪心算法遵循一种近似解决问题的技术，期盼通过每个阶段的局部最优选择（当前最好的解），从而达到全局的最优（全局最优解）。它不像动态规划算法那样计算更大的格局。
//   参考文章：
//   https://juejin.cn/post/6844904073632677902
//   首先我们通过贪心算法来看找零问题：
//     假设你是一个商店老板，你需要给顾客找零n元钱，你手上有的钱的面值为：100元、50元、20元、5元、1元。请问如何找零使得所需要的钱币数量最少？
//     例子：你需要找零126元，则所需钱币数量最少得方案为100元1张，20元1张，5元1张，1元1张
//   这个问题在生活中很常见，买东西的时候经常会遇到。正常的情况下，我们的思考思路会是这样
//     找到最大的面值100元，发现126元大于100，那么100元可以找一张，还剩余26元
//     26元能匹配的最大面值是20元，还剩下6元
//     6元能匹配的最大面值是5元，还剩下1元
//     1元刚好匹配到1元
//   const allMoney = [100,50,20,5,1];
//   function changeMoney(){
//     const length = allMoney.length;
//     const result = [];
//     for(let i = 0;i<length;i++){
//       if(n>=allMoney[i]){
//         result[i] = parseInt(n/allMoney[i])
//         n = n-result[i]*allMoney[i];
//       }else{
//         result[i] = 0
//       }
//     }
//     return result;
//   }
//   贪心算法->每次都去贪最大面值的，发现贪不了，再去贪次大的.
//   贪心算法（又称贪婪算法）是指，在对问题求解时，总是做出在当前看来事最好的选择。也就是说，不从整体最优上加以考虑，他做出的是在某种意义上的局部最优解。
//   贪心算法并不保证会得到最优解，但是在某些问题上谈心算法的解就是最优解。
//   关键点->要会判断一个问题能否用谈心算法来计算
